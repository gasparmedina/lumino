from raiden.storage.wal import WriteAheadLog
from raiden.transfer.mediated_transfer.initiator import get_initial_lock_expiration
from raiden.transfer.state import ChainState, NettingChannelState, message_identifier_from_prng
from raiden.utils import random_secret, sha3, create_default_identifier
from raiden.utils.typing import MessageID, PaymentID, SecretHash


class LockedTransferAutogeneratedValues:
    def __init__(self, chain_state: ChainState, channel_state: NettingChannelState):
        self.secret = random_secret()
        self.secrethash = SecretHash(sha3(self.secret))
        self.lock_expiration = get_initial_lock_expiration(chain_state.block_number, channel_state.reveal_timeout)
        self.payment_identifier = PaymentID(create_default_identifier())
        self.message_identifier = MessageID(message_identifier_from_prng(chain_state.pseudo_random_generator))


class LightClientUtils:

    @classmethod
    def build_lt_autogen_values(cls, chain_state: ChainState,
                                channel_state: NettingChannelState) -> LockedTransferAutogeneratedValues:
        return LockedTransferAutogeneratedValues(chain_state, channel_state)



